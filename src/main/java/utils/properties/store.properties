StoreDao.updateStore=update STORES set STORE_NAME = ?, STORE_BUSINESS_LICENSE_NUMBER = ?, STORE_ADDRESS = ?, STORE_ZIPCODE = ?, STORE_LATITUDE = ?, STORE_LONGITUDE = ?, STORE_TEXT = ?, STORE_PHONE = ?, STORE_DAYOFFS = ?, OWNER_ID = ? where ID = ?
StoreDao.getStoreById=select * from stores where ID = ?
StoreDao.deleteStoreById=delete from stores where ID = ? 
StoreDao.deleteStoreByName=delete from stores where STORE_NAME = ? 
StoreDao.getStoreByName=select * from stores where STORE_NAME = ?
StoreDao.insertStore=insert into stores (ID, STORE_NAME, STORE_BUSINESS_LICENSE_NUMBER, STORE_ADDRESS, STORE_ZIPCODE, STORE_LATITUDE, STORE_LONGITUDE, STORE_TEXT, STORE_PHONE, STORE_DAYOFFS, OWNER_ID) values (STORES_SEQUENCE.nextval, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
StoreDao.getAllStores=select * from stores 
StoreDao.getStoresByFoodCategory=select * from stores where ID in (select distinct STORE_ID from FOODS where FOOD_CATEGORY = ?)
StoreDao.getStoreByBusinessLicenseNumber=select * from stores where STORE_BUSINESS_LICENSE_NUMBER = ? 
StoreDao.getTotalRows=select count(*) from stores 
StoreDao.getTotalRowsByFoodCategory=select count(*) from (select * from stores where ID in (select distinct STORE_ID from FOODS where FOOD_CATEGORY = ?))
StoreDao.getStoresPaginated=select * from (SELECT ROW_NUMBER() OVER (ORDER BY review_avg DESC) ROW_NUMBER, review_avg, store_name, id FROM (select S.id, nvl(R.review_avg, 0) review_avg, S.store_name from (select store_id, avg(review_rating) review_avg from reviews group by store_id) R, stores S where R.store_id(+) = S.id )) WHERE ROW_NUMBER BETWEEN ? AND ?
StoreDao.getStoresPaginatedByCategory= select * from (SELECT ROW_NUMBER() OVER (ORDER BY review_avg DESC) ROW_NUMBER, review_avg, store_name, id FROM (select S.id, nvl(R.review_avg, 0) review_avg, S.store_name from (select store_id, avg(review_rating) review_avg from reviews group by store_id) R, (select distinct STORE_ID from FOODS where FOOD_CATEGORY = ?) F, stores S where R.store_id(+) = S.id and F.store_id = S.id)) WHERE ROW_NUMBER BETWEEN ? AND ?
#StoreDao.getStoresPaginated=SELECT * FROM (SELECT ROW_NUMBER() OVER (ORDER BY B.REVIEW_AVG DESC) ROW_NUMBER, B.REVIEW_AVG, A.STORE_NAME, A.ID FROM STORES A, (SELECT STORE_ID, AVG(REVIEW_RATING) REVIEW_AVG FROM REVIEWS GROUP BY STORE_ID) B WHERE A.ID = B.STORE_ID) WHERE ROW_NUMBER BETWEEN ? AND ?
StoreDao.getStoresHomePaginated=select * from (SELECT ROW_NUMBER() OVER (ORDER BY id desc) ROW_NUMBER, id,  store_name from stores) where row_number between ? and ?
StoreDao.getStoresByOwnerId=select * from stores where OWNER_ID = ? 