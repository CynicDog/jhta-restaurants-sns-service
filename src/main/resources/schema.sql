drop table store_pictures;
drop table store_opentimes;
drop table review_pictures;
drop table reviews;
drop table food_pictures;
drop table foods;
drop table stores;
drop table owners;
drop table customers;
drop table admins;

/* Create Tables */
CREATE TABLE ADMINS
(
	ID number NOT NULL,
	ADMIN_ID varchar2(255) NOT NULL,
	ADMIN_PASSWORD varchar2(255) NOT NULL,
	ADMIN_NAME varchar2(255) NOT NULL,
	ADMIN_EMAIL varchar2(255) NOT NULL,
	ADMIN_PHONE char(13) NOT NULL,
	ADMIN_BIRTHDAY date,
	ADMIN_GENDER varchar(32) NOT NULL,
	ADMIN_CREATE_DATE date DEFAULT SYSDATE,
	ADMIN_UPDATE_DATE date DEFAULT SYSDATE,
	PRIMARY KEY (ID)
);


CREATE TABLE CUSTOMERS
(
	ID  number NOT NULL,
	USER_ID varchar2(255) NOT NULL,
	USER_PASSWORD varchar2(255) NOT NULL,
	USER_NAME varchar2(255 char) NOT NULL,
	USER_EMAIL varchar2(255) NOT NULL,
	USER_PHONE varchar2(13) NOT NULL UNIQUE,
	USER_BIRTHDAY date,
	USER_GENDER varchar2(32) NOT NULL,
	USER_GRADE char(32),
	USER_CREATE_DATE date DEFAULT SYSDATE,
	USER_UPDATE_DATE date DEFAULT SYSDATE,
	PRIMARY KEY (ID )
);


CREATE TABLE FOODS
(
	ID number NOT NULL,
	FOOD_NAME varchar2(128) NOT NULL,
	FOOD_PRICE number NOT NULL,
	FOOD_CATEGORY varchar2(64) NOT NULL,
	FOOD_SOLDOUT varchar2(16) NOT NULL,
	FOOD_PICTURE_LOCATION varchar2(255),
	FOOD_TEXT varchar2(255),  				-- added 
	STORE_ID number NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE FOOD_PICTURES
(
	ID number NOT NULL,
	FILE_LOCATION varchar2(255),
	FOOD_ID number NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE OWNERS
(
	ID number NOT NULL,
	OWNER_ID varchar2(255) NOT NULL,
	OWNER_PASSWORD varchar2(255) NOT NULL,
	OWNER_NAME varchar2(255) NOT NULL,
	OWNER_EMAIL varchar2(255) NOT NULL,
	OWNER_PHONE char(13) NOT NULL UNIQUE,
	OWNER_BIRTHDAY date,
	OWNER_GENDER varchar(32) NOT NULL,
	OWNER_GRADE varchar2(32),
	OWNER_SUBSCRIPTION varchar2(32),
	OWNER_CREATE_DATE date DEFAULT SYSDATE,
	OWNER_UPDATE_DATE date DEFAULT SYSDATE,
	PRIMARY KEY (ID)
);


CREATE TABLE REVIEWS
(
	ID number NOT NULL,
	REVIEW_RATING number NOT NULL,
	REVIEW_TEXT varchar2(255) NOT NULL,
	REVIEW_CREATE_DATE date DEFAULT SYSDATE NOT NULL,
	REVIEW_UPDATE_DATE date DEFAULT SYSDATE,
	CUSTOMER_ID  number NOT NULL,
	STORE_ID number NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE REVIEW_PICTURES
(
	ID number NOT NULL,
	FILE_LOCATION varchar2(255),
	REVIEW_ID number NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE STORES
(
	ID number NOT NULL,
	STORE_NAME varchar2(64),
	STORE_BUSINESS_LICENSE_NUMBER number NOT NULL,
	STORE_ADDRESS varchar2(255) NOT NULL,
	STORE_ZIPCODE number NOT NULL,
	STORE_LATITUDE number(10,6),
	STORE_LONGITUDE number(10,6),
	STORE_TEXT varchar2(255),
	STORE_PHONE varchar2(13),
	STORE_DAYOFFS varchar2(255), --added 
	OWNER_ID number NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE STORE_OPENTIMES
(
	ID number NOT NULL,
	OPERATION_TIME varchar(255), 
--	TIME_CATEGORY char(32), 				-- dropped 
--	TIME_DAY char(8) NOT NULL,				-- dropped
--	TIME_OPENTIME varchar2(64) NOT NULL,	-- dropped
--	TIME_CLOSETIME varchar2(64) NOT NULL, 	-- dropped
	STORE_ID number NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE STORE_PICTURES
(
	ID number NOT NULL,
	FILE_LOCATION varchar2(255),
	STORE_ID number NOT NULL,
	PRIMARY KEY (ID)
);



/* Create Foreign Keys */

ALTER TABLE REVIEWS
	ADD FOREIGN KEY (CUSTOMER_ID )
	REFERENCES CUSTOMERS (ID )
;


ALTER TABLE FOOD_PICTURES
	ADD FOREIGN KEY (FOOD_ID)
	REFERENCES FOODS (ID)
;


ALTER TABLE STORES
	ADD FOREIGN KEY (OWNER_ID)
	REFERENCES OWNERS (ID)
;


ALTER TABLE REVIEW_PICTURES
	ADD FOREIGN KEY (REVIEW_ID)
	REFERENCES REVIEWS (ID)
;


ALTER TABLE FOODS
	ADD FOREIGN KEY (STORE_ID)
	REFERENCES STORES (ID)
;


ALTER TABLE REVIEWS
	ADD FOREIGN KEY (STORE_ID)
	REFERENCES STORES (ID)
;


ALTER TABLE STORE_OPENTIMES
	ADD FOREIGN KEY (STORE_ID)
	REFERENCES STORES (ID)
;


ALTER TABLE STORE_PICTURES
	ADD FOREIGN KEY (STORE_ID)
	REFERENCES STORES (ID)
;

ALTER TABLE CUSTOMERS
ADD CONSTRAINT UQ_CUSTOMERS_USER_ID UNIQUE (USER_ID);


ALTER TABLE OWNERS
ADD CONSTRAINT UQ_OWNERS_OWNER_ID UNIQUE (OWNER_ID);

ALTER TABLE STORES 
ADD CONSTRAINT UQ_BUIZ_LICENSE_NUM UNIQUE (STORE_BUSINESS_LICENSE_NUMBER); 